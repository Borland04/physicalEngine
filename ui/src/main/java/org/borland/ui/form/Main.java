package org.borland.ui.form;

import org.borland.core.EngineCore;
import org.borland.ui.WorldRenderMain;
import org.borland.ui.form.components.propertiesview.PropertiesView;
import org.borland.ui.form.components.WorldNavigator;
import org.borland.ui.model.WorldState;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;

public class Main {
    public static Main mainInstance;
    private final WorldState worldState;

    private JPanel mainPanel;
    private JPanel worldRenderPanel;
    private JPanel configPanel;
    private WorldNavigator worldNavigator;
    private JButton button1;
    private JPanel worldNavigatorPanel;
    private PropertiesView propertiesViewTable;

    public static void main(String[] args) {
        JFrame frame = new JFrame("Physical engine");
        mainInstance = new Main();
        frame.setContentPane(mainInstance.mainPanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();

        frame.setMinimumSize(new Dimension(640, 480));
        frame.setVisible(true);
    }

    // TODO: hangs sometimes
    public Main() {
        worldState = new WorldState(new EngineCore());

        // Should be called AFTER the 'worldState' initialization
        $$$setupUI$$$();
        WorldRenderMain worldRenderer = new WorldRenderMain(worldState);

        SwingUtilities.invokeLater(() -> worldRenderPanel.add(worldRenderer.getWorldCanvas().getCanvas()));
        button1.addActionListener(e -> worldState.toggleRunning());
    }

    public WorldState getWorldState() {
        return worldState;
    }

    public EngineCore getWorld() {
        return worldState.getWorld();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        final JSplitPane splitPane1 = new JSplitPane();
        splitPane1.setDividerLocation(400);
        splitPane1.setDividerSize(10);
        splitPane1.setFocusable(false);
        splitPane1.setOneTouchExpandable(true);
        splitPane1.setOpaque(true);
        splitPane1.setResizeWeight(1.0);
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(splitPane1, gbc);
        worldRenderPanel = new JPanel();
        worldRenderPanel.setLayout(new BorderLayout(5, 5));
        splitPane1.setLeftComponent(worldRenderPanel);
        configPanel = new JPanel();
        configPanel.setLayout(new GridBagLayout());
        splitPane1.setRightComponent(configPanel);
        button1 = new JButton();
        button1.setText("Button");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weighty = 0.01;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        configPanel.add(button1, gbc);
        final JSplitPane splitPane2 = new JSplitPane();
        splitPane2.setOneTouchExpandable(true);
        splitPane2.setOrientation(0);
        splitPane2.setResizeWeight(1.0);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        configPanel.add(splitPane2, gbc);
        worldNavigatorPanel = new JPanel();
        worldNavigatorPanel.setLayout(new BorderLayout(0, 0));
        splitPane2.setLeftComponent(worldNavigatorPanel);
        worldNavigatorPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), "World Navigator", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final JScrollPane scrollPane1 = new JScrollPane();
        worldNavigatorPanel.add(scrollPane1, BorderLayout.CENTER);
        final DefaultListModel defaultListModel1 = new DefaultListModel();
        worldNavigator.setModel(defaultListModel1);
        scrollPane1.setViewportView(worldNavigator);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        splitPane2.setRightComponent(panel1);
        panel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), "Properties", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final JScrollPane scrollPane2 = new JScrollPane();
        panel1.add(scrollPane2, BorderLayout.CENTER);
        scrollPane2.setViewportView(propertiesViewTable);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

    private void createUIComponents() {
        // World Navigator creation
        worldNavigator = new WorldNavigator(worldState);
        propertiesViewTable = new PropertiesView(worldState);
    }
}
